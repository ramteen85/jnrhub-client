{"version":3,"sources":["components/Register/Register.module.css","components/Profile/Profile.module.css","components/Lobbyemp/Lobbyemp.module.css","components/Jobboard/Jobboard.module.css","components/Applications/Applications.module.css","components/Navbar/Navbar.module.css","components/Login/Login.module.css","components/Job/Job.module.css","components/Empjob/Empjob.module.css","components/CreateJob/CreateJob.module.css","components/Navbar/Navbar.js","components/Login/Login.js","components/Register/Register.js","components/Lobbyemp/Lobbyemp.js","components/Lobbyjs/Lobbyjs.js","components/Jobboard/Jobboard.js","components/Job/Job.js","components/Profile/Profile.js","components/Empjob/Empjob.js","components/Applications/Applications.js","components/CreateJob/CreateJob.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","state","loggedin","className","styles","navwrapper","mainnav","brand","to","this","props","inline","href","oddOneOut","onClick","onLogout","Component","Login","username","password","invalidLogin","loginHandler","e","preventDefault","axios","post","email","then","res","console","log","localStorage","setItem","data","jwt","result","jwtDecode","getItem","userType","onLogin","history","push","catch","err","setState","inputChangeHandler","event","value","target","name","usrType","container","loginform","onSubmit","type","onChange","placeholder","loginregisterbutton","button","Register","submitted","emailError","errorMsg","emailInvalid","fullnameInvalid","phoneInvalid","suburbInvalid","stateInvalid","countryInvalid","aboutInvalid","passwordInvalid","memberHandler","userPath","user","full_name","fullname","phone_no","phone","suburb","country","website","about","user_type","admin","password_confirmation","confirm_password","valid","validateLive","error","normal","validate","hidden","fullnameError","confirmPasswordInvalid","handleSubmit","registerform","regForm","id","startsWith","cols","rows","subtitle","employer","src","alt","jobseeker","withRouter","Lobbyemp","jobs","loggedIn","token","mainheader","jobboard","slice","map","job","key","jobcolumn","company_name","location","role","applicants","Lobbyjs","profile","Jobboard","get","Job","profileId","applyForJob","job_id","match","params","alert","salary","description","apply","Profile","editing","full_nameError","phone_noError","suburb_error","state_error","website_error","editField","updateField","fieldName","response","profileStyle","profileItem","defaultValue","onKeyDown","edit","Empjob","deletePostHandler","delete","JwtDecode","user_id","Applications","users","heading","length","displaynone","applicantcolumn","CreateJob","submitHandler","App","setLoginStatus","performLogout","removeItem","window","replace","setType","path","render","exact","component","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,OAAS,yBAAyB,UAAY,4BAA4B,aAAe,+BAA+B,SAAW,2BAA2B,SAAW,2BAA2B,UAAY,4BAA4B,QAAU,0BAA0B,OAAS,yBAAyB,SAAW,2BAA2B,OAAS,2B,mBCAnZD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,YAAc,6BAA6B,aAAe,gC,mBCAzGD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,WAAa,6BAA6B,SAAW,2BAA2B,UAAY,4BAA4B,IAAM,sBAAsB,OAAS,2B,mBCAvND,EAAOC,QAAU,CAAC,UAAY,4BAA4B,WAAa,6BAA6B,SAAW,2BAA2B,UAAY,4BAA4B,IAAM,sBAAsB,QAAU,0BAA0B,OAAS,2B,mBCA3PD,EAAOC,QAAU,CAAC,WAAa,iCAAiC,QAAU,8BAA8B,YAAc,oC,mBCAtHD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,MAAQ,sBAAsB,OAAS,uBAAuB,UAAY,4B,mBCA9HD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,aAAe,4BAA4B,UAAY,yBAAyB,oBAAsB,qC,mBCA7JD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,wB,mBCAhED,EAAOC,QAAU,CAAC,UAAY,6BAA6B,OAAS,4B,sOCiCrDC,E,2MA9BXC,MAAQ,CACJC,UAAU,G,wEAEJ,IAAD,OACL,OACI,yBAAKC,UAAWC,IAAOC,YACnB,yBAAKF,UAAWC,IAAOE,SACnB,uBAAGH,UAAWC,IAAOG,OAArB,aACA,4BACI,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEFC,KAAKC,MAAMR,SAEb,yBAAKC,UAAWC,IAAOO,QACnB,4BAAI,kBAAC,IAAD,CAAMH,GAAG,aAAT,cACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,YAIJ,4BAAI,uBAAGI,KAAK,IAAIT,UAAWC,IAAOS,UAAWL,GAAG,UAAUM,QAAS,kBAAM,EAAKJ,MAAMK,aAAhF,YAGR,gCAAK,kBAAC,IAAD,CAAMP,GAAG,aAAT,oB,GAvBRQ,a,iECyFNC,E,YA5EX,WAAYP,GAAQ,IAAD,8BACf,4CAAMA,KATVT,MAAQ,CAEJiB,SAAU,GACVC,SAAU,GACVC,cAAc,GAIC,EASnBC,aAAe,SAACC,GACZA,EAAEC,iBAEFC,IAAMC,KAAK,wDAAyD,CAChEC,MAAO,EAAKzB,MAAMiB,SAClBC,SAAU,EAAKlB,MAAMkB,WAExBQ,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZG,aAAaC,QAAQ,MAAOJ,EAAIK,KAAKC,KACrC,IAAIC,EAASC,IAAUL,aAAaM,QAAQ,QAC5CN,aAAaC,QAAQ,UAAWG,EAAOG,UACvC,EAAK5B,MAAM6B,SAAQ,GAEI,cAApBJ,EAAOG,SAEN,EAAK5B,MAAM8B,QAAQC,KAAnB,cAE0B,aAApBN,EAAOG,UAEb,EAAK5B,MAAM8B,QAAQC,KAAnB,gBAGPC,OAAM,SAAAC,GAEH,EAAKC,SAAS,CAACxB,cAAc,QAlClB,EAsCnByB,mBAAqB,SAACC,GAClBA,EAAMvB,iBACN,IAAMwB,EAAQD,EAAME,OAAOD,MAC3B,EAAKH,SAAL,eACO,EAAK3C,MADZ,eAEK6C,EAAME,OAAOC,KAAOF,MAzCtB,EAAKrC,MAAMR,WACV2B,QAAQC,IAAI,EAAKpB,OACjBmB,QAAQC,IAAI,EAAKpB,MAAMwC,SACvB,EAAKxC,MAAM8B,QAAQC,KAAK,IAAMV,aAAaM,QAAQ,aALxC,E,sEAgDf,OACI,yBAAKlC,UAAWC,IAAO+C,WACnB,yBAAKhD,UAAWC,IAAOgD,WACnB,sCAAe,6BAAK,6BAEhB,0BAAMC,SAAU5C,KAAKY,cACjB,2BAAOiC,KAAK,OAAOL,KAAK,WAAWM,SAAU9C,KAAKoC,mBAAoBW,YAAY,eAClF,2BAAOF,KAAK,WAAWL,KAAK,WAAWM,SAAU9C,KAAKoC,mBAAoBW,YAAY,eACtF,4BAAQrD,UAAaC,IAAOqD,oBAC5BH,KAAK,UADL,SAC4B,6BAC5B,4BAAQnD,UAAWC,IAAOsD,QAAQ,uBAAG9C,KAAK,6BAAR,cAGpCH,KAAKR,MAAMmB,aAEb,yBAAKjB,UAAWC,IAAOgB,cAAvB,iBAIA,S,GA7EJJ,a,wBCAd2C,E,2MAGF1D,MAAQ,CACJ2D,WAAW,EACXC,WAAYzD,IAAO0D,SACnBC,aAAc,GACdC,gBAAiB,GACjBC,aAAc,GACdC,cAAc,GACdC,aAAa,GACbC,eAAe,GACfC,aAAc,GACdC,gBAAgB,I,EAIpBC,cAAgB,SAACjD,EAAGkD,GAIhBhD,IAAMC,KAAK,uDAAwD,CAC/DgD,KAAM,CACF/C,MAAO,EAAKzB,MAAMyB,MAClBgD,UAAW,EAAKzE,MAAM0E,SACtBC,SAAU,EAAK3E,MAAM4E,MACrBC,OAAQ,EAAK7E,MAAM6E,OACnB7E,MAAO,EAAKA,MAAMA,MAClB8E,QAAS,EAAK9E,MAAM8E,QACpBC,QAAS,EAAK/E,MAAM+E,QACpBC,MAAO,EAAKhF,MAAMgF,MAClBC,UAAWV,EACXW,OAAO,EACPhE,SAAU,EAAKlB,MAAMkB,SACrBiE,sBAAuB,EAAKnF,MAAMoF,oBAGzC1D,MAAK,SAAAC,GAEFC,QAAQC,IAAIF,EAAIK,KAAKC,KACrBH,aAAaC,QAAQ,MAAOJ,EAAIK,KAAKC,KAGrC,EAAKxB,MAAM6B,SAAQ,GAGnB,IAAIJ,EAASC,IAAUL,aAAaM,QAAQ,QAC5CR,QAAQC,IAAIK,GAGZJ,aAAaC,QAAQ,UAAWG,EAAOG,UACvC,EAAK5B,MAAM8B,QAAQC,KAAnB,WAA4BV,aAAaM,QAAQ,gBAGpDK,OAAM,SAAAC,GAEHd,QAAQC,IAAIa,O,EAIpBE,mBAAqB,SAACC,GAClBA,EAAMvB,iBACN,IAAMwB,EAAQD,EAAME,OAAOD,MAC3B,EAAKH,SAAL,eACO,EAAK3C,MADZ,eAEK6C,EAAME,OAAOC,KAAOF,KAGzB,IAAIuC,GAAQ,EAGZA,EAFe,EAAKC,aAAaD,EAAOxC,I,EAK5CyC,aAAe,SAACD,EAAOhE,GAQnB,MAPsB,KAAnBA,EAAE0B,OAAOD,OACR,EAAKH,SAAL,eAAgBtB,EAAE0B,OAAOC,KAAO,UAAY7C,IAAOoF,QACnDF,GAAQ,GAER,EAAK1C,SAAL,eAAgBtB,EAAE0B,OAAOC,KAAO,UAAY7C,IAAOqF,SAGhDH,G,EAGXI,SAAW,SAACJ,EAAOhE,GAuEf,MAtE4B,KAAzBA,EAAE0B,OAAOtB,MAAMqB,OACd,EAAKH,SAAS,CAACmB,aAAc3D,IAAOoF,QACpC,EAAK5C,SAAS,CAACiB,WAAYzD,IAAO0D,WAClCwB,GAAQ,IAER,EAAK1C,SAAS,CAACmB,aAAc3D,IAAOqF,SACpC,EAAK7C,SAAS,CAACiB,WAAYzD,IAAOuF,UAIP,KAA5BrE,EAAE0B,OAAO2B,SAAS5B,OACjB,EAAKH,SAAS,CAACoB,gBAAiB5D,IAAOoF,QACvC,EAAK5C,SAAS,CAACgD,cAAexF,IAAO0D,WACrCwB,GAAQ,IAER,EAAK1C,SAAS,CAACoB,gBAAiB5D,IAAOqF,SACvC,EAAK7C,SAAS,CAACgD,cAAexF,IAAOuF,UAKb,KAAzBrE,EAAE0B,OAAO6B,MAAM9B,OACd,EAAKH,SAAS,CAACqB,aAAc7D,IAAOoF,QACpCF,GAAQ,GAER,EAAK1C,SAAS,CAACqB,aAAc7D,IAAOqF,SAGX,KAA1BnE,EAAE0B,OAAO8B,OAAO/B,OACf,EAAKH,SAAS,CAACsB,cAAe9D,IAAOoF,QACrCF,GAAQ,GAER,EAAK1C,SAAS,CAACsB,cAAe9D,IAAOqF,SAGb,KAAzBnE,EAAE0B,OAAO/C,MAAM8C,OACd,EAAKH,SAAS,CAACuB,aAAc/D,IAAOoF,QACpCF,GAAQ,GAER,EAAK1C,SAAS,CAACuB,aAAc/D,IAAOqF,SAGV,KAA3BnE,EAAE0B,OAAO+B,QAAQhC,OAChB,EAAKH,SAAS,CAAEwB,eAAgBhE,IAAOoF,QACvCF,GAAQ,GAER,EAAK1C,SAAS,CAAEwB,eAAgBhE,IAAOqF,SAGf,KAAzBnE,EAAE0B,OAAOiC,MAAMlC,OACd,EAAKH,SAAS,CAAEyB,aAAcjE,IAAOoF,QACrCF,GAAQ,GAER,EAAK1C,SAAS,CAAEyB,aAAcjE,IAAOqF,SAGV,KAA5BnE,EAAE0B,OAAO7B,SAAS4B,OAAgBzB,EAAE0B,OAAO7B,SAAS4B,QAAUzB,EAAE0B,OAAOqC,iBAAiBtC,OACvF,EAAKH,SAAS,CAAE0B,gBAAiBlE,IAAOoF,QACxCF,GAAQ,GAER,EAAK1C,SAAS,CAAE0B,gBAAiBlE,IAAOqF,SAGL,KAApCnE,EAAE0B,OAAOqC,iBAAiBtC,OAAgBzB,EAAE0B,OAAO7B,SAAS4B,QAAUzB,EAAE0B,OAAOqC,iBAAiBtC,OAC/F,EAAKH,SAAS,CAAEiD,uBAAwBzF,IAAOoF,QAC/CF,GAAQ,GAER,EAAK1C,SAAS,CAAEiD,uBAAwBzF,IAAOqF,SAG5CH,G,EAGXQ,aAAe,SAACxE,GACZA,EAAEC,iBAGF,IAAI+D,GAAQ,GAIZA,EAFe,EAAKI,SAASJ,EAAOhE,KAKhC,EAAKsB,SAAS,CAACgB,WAAW,K,wEAIxB,IAAD,OACL,OACI,yBAAKzD,UAAWC,IAAO+C,YACQ,IAAzB1C,KAAKR,MAAM2D,UAEb,yBAAKzD,UAAWC,IAAO2F,cACvB,yBAAK5F,UAAWC,IAAO4F,SACnB,4CAAqB,6BAAK,6BAC1B,0BAAM3C,SAAU5C,KAAKqF,cACjB,2BAAOvC,SAAU9C,KAAKoC,mBAAoBS,KAAK,QAAQE,YAAY,aAAaP,KAAK,QAAQgD,GAAG,QAAQ9F,UAAWM,KAAKR,MAAM8D,eAC5HtD,KAAKR,MAAM8D,aAAamC,WAAW,kBAErC,2BAAO/F,UAAWM,KAAKR,MAAM4D,YAA7B,2BAEA,GAEA,2BAAON,SAAU9C,KAAKoC,mBAAoBS,KAAK,OAAOE,YAAY,iBAAiBP,KAAK,WAAWgD,GAAG,WAAW9F,UAAWM,KAAKR,MAAM+D,kBACrIvD,KAAKR,MAAM+D,gBAAgBkC,WAAW,kBAExC,2BAAO/F,UAAWC,IAAO0D,UAAzB,0BAEA,GAEA,2BAAOP,SAAU9C,KAAKoC,mBAAoBS,KAAK,OAAOE,YAAY,eAAeP,KAAK,QAAQgD,GAAG,QAAQ9F,UAAWM,KAAKR,MAAMgE,eAC7HxD,KAAKR,MAAMgE,aAAaiC,WAAW,kBAErC,2BAAO/F,UAAWC,IAAO0D,UAAzB,4BAEA,GAGA,2BAAOP,SAAU9C,KAAKoC,mBAAoBS,KAAK,OAAOE,YAAY,SAChEP,KAAK,SAASgD,GAAG,SAAS9F,UAAWM,KAAKR,MAAMiE,gBAChDzD,KAAKR,MAAMiE,cAAcgC,WAAW,kBAEpC,2BAAO/F,UAAWC,IAAO0D,UAAzB,4BAEA,GAGF,2BAAOP,SAAU9C,KAAKoC,mBAAoBS,KAAK,OAAOE,YAAY,QAChEP,KAAK,QAAQgD,GAAG,QAAQ9F,UAAWM,KAAKR,MAAMkE,eAC9C1D,KAAKR,MAAMkE,aAAa+B,WAAW,kBAEnC,2BAAO/F,UAAWC,IAAO0D,UAAzB,2BAEA,GAEF,2BAAOP,SAAU9C,KAAKoC,mBAAoBS,KAAK,OAAOE,YAAY,UAAUP,KAAK,UAAUgD,GAAG,UAAU9F,UAAWM,KAAKR,MAAMmE,iBAC1H3D,KAAKR,MAAMmE,eAAe8B,WAAW,kBAEvC,2BAAO/F,UAAWC,IAAO0D,UAAzB,6BAEA,GAGF,2BAAOP,SAAU9C,KAAKoC,mBAAoBS,KAAK,OAAOE,YAAY,yBAAyBP,KAAK,UAAUgD,GAAG,YAC7G,8BAAU1C,SAAU9C,KAAKoC,mBAAoBsD,KAAK,KAAKC,KAAK,IAAI5C,YAAY,mCAAmCP,KAAK,QAAQgD,GAAG,QAAQ9F,UAAWM,KAAKR,MAAMoE,eAC3J5D,KAAKR,MAAMoE,aAAa6B,WAAW,kBAEnC,2BAAO/F,UAAWC,IAAO0D,UAAzB,wCAEA,GAEF,2BAAOP,SAAU9C,KAAKoC,mBAAoBS,KAAK,WAAWE,YAAY,gBAAgBP,KAAK,WAAWgD,GAAG,WAAW9F,UAAWM,KAAKR,MAAMqE,kBACxI7D,KAAKR,MAAMqE,gBAAgB4B,WAAW,kBAEtC,2BAAO/F,UAAWC,IAAO0D,UAAzB,iCAEA,GAIF,2BAAOP,SAAU9C,KAAKoC,mBAAoBS,KAAK,WAAWE,YAAY,mBACpEP,KAAK,mBAAmBgD,GAAG,mBAAmB9F,UAAWM,KAAKR,MAAM4F,yBACpEpF,KAAKR,MAAMkB,WAAaV,KAAKR,MAAMoF,kBAAoB5E,KAAKR,MAAMkB,UAAYV,KAAKR,MAAMoF,iBAE3F,2BAAOlF,UAAWC,IAAO0D,UAAzB,yBAEA,GAGA,4BAAQR,KAAK,SAASnD,UAAWC,IAAOqD,qBAAxC,qBAKJ,6BACE,wBAAItD,UAAWC,IAAOiG,UAAtB,YAEA,yBAAKlG,UAAWC,IAAO+C,WACrB,yBAAKhD,UAAWC,IAAOkG,SAAUxF,QAAS,SAACQ,GAAD,OAAO,EAAKiD,cAAcjD,EAAG,cACrE,8CACA,yBAAKiF,IAAI,wBAAwBC,IAAI,cAEvC,yBAAKrG,UAAWC,IAAOqG,UAAW3F,QAAS,SAACQ,GAAD,OAAO,EAAKiD,cAAcjD,EAAG,eACtE,+CAEA,yBAAKiF,IAAI,0BAA0BC,IAAI,gC,GAhR1CxF,aA2RR0F,cAAW/C,G,iBClNXgD,E,YApEb,WAAYjG,GAAQ,IAAD,8BACjB,4CAAMA,KALRT,MAAQ,CACN2G,KAAM,KAKqB,IAAxB,EAAKlG,MAAMmG,UACZ,EAAKnG,MAAM8B,QAAQC,KAAK,KAHT,E,iFAOE,IAAD,OAElBjB,IAAMC,KAAK,wDAAyD,CAClEqF,MAAO/E,aAAaM,QAAQ,SAE7BV,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIK,MAChB,EAAKW,SAAS,CAAEkE,MAAO/E,aAAaM,QAAQ,OAAQuE,KAAMhF,EAAIK,UAE/DS,OAAM,SAAAC,GACLd,QAAQC,IAAIa,Q,+BAMd,OACE,yBAAKxC,UAAWC,IAAO+C,WACrB,yBAAKhD,UAAWC,IAAO2G,YACvB,4CAEA,2BAAO5G,UAAWC,IAAO4G,UACvB,+BACE,4BACE,uCACA,wCACA,oCACA,8CAGJ,+BAGEvG,KAAKR,MAAM2G,KAAKK,MAAM,GAAGC,KAAI,SAACC,EAAKC,GAAN,OAC7B,wBAAIA,IAAKD,EAAIlB,IACb,wBAAI9F,UAAWC,IAAOiH,WAAYF,EAAIG,cACtC,wBAAInH,UAAWC,IAAOiH,WAAYF,EAAII,UACpC,wBAAIpH,UAAWC,IAAOiH,WAAYF,EAAIK,MACtC,wBAAIrH,UAAWC,IAAOiH,WAAYF,EAAIM,YAExC,wBAAItH,UAAWC,IAAOiH,WAAW,kBAAC,IAAD,CAAM7G,GAAE,kBAAa2G,EAAIlB,KAAzB,kBAMC,cAApClE,aAAaM,QAAQ,WAIpB,4BAAQlC,UAAWC,IAAOsD,QAAQ,kBAAC,IAAD,CAAMlD,GAAG,eAAT,gBAGrC,Q,GAlEeQ,aCoCR0G,E,2MAlCXzH,MAAQ,CACJ0H,QAAS,CACLf,KAAM,K,mFAIO,IAAD,OAGhBpF,IAAMC,KAAK,+DAAgE,CACvE,MAASM,aAAaM,QAAQ,SAEjCV,MAAK,SAAAC,GACF,EAAKgB,SAAS,CAAE+E,QAAS/F,EAAIK,OAC7BJ,QAAQC,IAAIF,EAAIK,SAEnBS,OAAM,SAAAC,GACHd,QAAQC,IAAIa,Q,+BAMhB,OACI,6BAEI,wCAAclC,KAAKR,MAAM0H,QAAQjD,gB,GA5B3B1D,a,iBCiEP4G,E,YA3Db,WAAYlH,GAAQ,IAAD,8BACjB,4CAAMA,KALRT,MAAQ,CACN2G,KAAM,KAKqB,IAAxB,EAAKlG,MAAMmG,UACZ,EAAKnG,MAAM8B,QAAQC,KAAK,KAHT,E,iFAOE,IAAD,OAClBjB,IAAMqG,IAAI,uDACTlG,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIK,MAChB,EAAKW,SAAS,CAAEgE,KAAMhF,EAAIK,UAE3BS,OAAM,SAAAC,GACLd,QAAQC,IAAIa,Q,+BAMd,OACE,yBAAKxC,UAAWC,IAAO+C,WACrB,yBAAKhD,UAAWC,IAAO2G,YACvB,+CAIA,2BAAO5G,UAAWC,IAAO4G,UACvB,+BACE,4BACE,uCACA,wCACA,sCAIJ,+BACEvG,KAAKR,MAAM2G,KAAKM,KAAI,SAACC,EAAKC,GAAN,OACpB,wBAAIA,IAAKD,EAAIlB,IACb,wBAAI9F,UAAWC,IAAOiH,WAAYF,EAAIG,cACtC,wBAAInH,UAAWC,IAAOiH,WAAYF,EAAII,UACtC,wBAAIpH,UAAWC,IAAOiH,WAAYF,EAAIK,MACA,cAApCzF,aAAaM,QAAQ,WAEvB,wBAAIlC,UAAWC,IAAOiH,WAAW,kBAAC,IAAD,CAAM7G,GAAE,eAAU2G,EAAIlB,KAAtB,YAEjC,wBAAI9F,UAAWC,IAAOiH,WAAW,kBAAC,IAAD,CAAM7G,GAAE,kBAAa2G,EAAIlB,KAAzB,uB,GApDtBjF,a,iBC0DR8G,E,2MAxDb7H,MAAQ,CACN8H,WAAY,EACZZ,IAAK,I,EAiBPa,YAAc,WACZxG,IAAMC,KAAK,8DAA+D,CACxEqF,MAAO/E,aAAaM,QAAQ,OAC5B4F,OAAQ,EAAKvH,MAAMwH,MAAMC,OAAOlC,KAEjCtE,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIK,MAChBmG,MAAM,uBAAD,OAAwB,EAAKnI,MAAMkH,IAAIG,eAC5C,EAAK5G,MAAM8B,QAAQC,KAAK,QAEzBC,OAAM,SAAAC,GACLd,QAAQC,IAAIa,O,mFAzBK,IAAD,OACflC,KAAKC,MAAMwH,MAAMC,OAAOlC,GAEzBzE,IAAMqG,IAAN,8DAAiEpH,KAAKC,MAAMwH,MAAMC,OAAOlC,KACxFtE,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZ,EAAKgB,SAAS,CAAEmF,UAAW,EAAKrH,MAAMwH,MAAMC,OAAOlC,GAAIkB,IAAKvF,EAAIK,UAEjES,OAAM,SAAAC,GAAG,OAAId,QAAQC,IAAIa,MAE1BlC,KAAKC,MAAM8B,QAAQC,KAAK,e,+BAqB1B,OACE,yBAAKtC,UAAWC,IAAO+C,WAEnB,4BAAK1C,KAAKR,MAAMkH,IAAIK,MAAU,6BAC9B,2BAAG,4CAAyB,6BAAK,6BAAM/G,KAAKR,MAAMkH,IAAIG,cAAiB,6BAAK,6BAAK,6BACjF,2BAAG,6CAA0B,6BAAK,6BAAlC,IAAyC7G,KAAKR,MAAMkH,IAAII,UAAa,6BAAK,6BAAK,6BAC/E,2BAAG,2CAAwB,6BAAK,6BAAhC,KAAwC9G,KAAKR,MAAMkH,IAAIkB,QAAW,6BAAK,6BAAK,6BAC5E,2BAAG,oDAAiC,6BAAK,6BAAK,6BAC7C5H,KAAKR,MAAMkH,IAAImB,aAChB,6BAAK,6BAAK,6BAAK,6BACf,yBAAKnI,UAAWC,IAAOmI,OACvB,uBAAGzH,QAASL,KAAKuH,aAAjB,oB,GAjDQhH,a,iBCyMHwH,E,2MAvMbvI,MAAQ,CAENwI,QAAS,CACP/D,WAAW,EACXgE,eAAgB,GAChB9D,UAAU,EACV+D,cAAe,GACf7D,QAAQ,EACR8D,aAAc,GACd3I,OAAO,EACP4I,YAAa,GACb7D,SAAS,EACT8D,cAAe,IAEjBnB,QAAS,CACPf,KAAM,K,EAsBVmC,UAAY,SAACjG,GACXjB,QAAQC,IAAI,WAAYgB,EAAME,OAAOC,MACrC,EAAKL,SAAS,CAAE6F,QAAQ,eAAI3F,EAAME,OAAOC,MAAO,M,EAIhD+F,YAAc,SAAClG,GACbjB,QAAQC,IAAIgB,EAAME,OAAOD,OAKzB,IAAMkG,EAAYnG,EAAME,OAAOC,KAE/B,GAAiB,UAAdH,EAAMsE,IAAgB,CAGvB,IAAMN,EAAQ/E,aAAaM,QAAQ,OAEnCb,IAAMC,KAAK,8DAA8D,CACrEgD,KAAK,eACFwE,EAAYnG,EAAME,OAAOD,OAE5B+D,MAAOA,IAEVnF,MAAK,SAAAuH,GAIsB,IAAD,GAFzBrH,QAAQC,IAAIoH,EAASjH,MAEjBiH,EAASjH,KAAKuD,OAEhB,EAAK5C,SAAS,CACZ6F,QAAQ,eACH,EAAKxI,MAAMwI,SADT,mBAEJQ,GAAY,GAFR,cAGJA,EAAY,QAAUC,EAASjH,KAAKuD,OAHhC,MAQT,EAAK5C,SAAS,CACZ+E,QAAQ,eACH,EAAK1H,MAAM0H,QADT,eAEJsB,EAAYC,EAASjH,KAAKwC,KAAKwE,KAElCR,QAAQ,eAAIQ,GAAY,QAK7BvG,OAAM,SAAAC,GACLd,QAAQC,IAAI,QAAQa,MAGtBd,QAAQC,IAAI,UAAW,EAAK7B,MAAM0H,QAAQ1B,M,mFAxE3B,IAAD,OAClBpE,QAAQC,IAAI,SACZD,QAAQC,IAAIC,aAAaM,QAAQ,QACjCb,IAAMC,KAAK,+DAAgE,CACvE,MAASM,aAAaM,QAAQ,SAEjCV,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIK,MAChB,EAAKW,SAAS,CAAE+E,QAAS/F,EAAIK,UAG9BS,OAAM,SAAAC,GACLd,QAAQC,IAAI,QAAQa,Q,+BAkElB,OACE,6BAEE,uCAEA,yBAAKxC,UAAWC,IAAO+I,cAGvB,uBAAGhJ,UAAWC,IAAOgJ,aAArB,iBAEI3I,KAAKR,MAAMwI,QAAQ/D,UAEnB,2BAAOpB,KAAK,OAAOL,KAAK,YACtBoG,aAAc5I,KAAKR,MAAM0H,QAAQjD,UACjC4E,UAAY7I,KAAKuI,cAGnB,8BACIvI,KAAKR,MAAM0H,QAAQjD,UACrB,yBAAK5D,QAAUL,KAAKsI,UAAY9F,KAAK,YAAYsD,IAAI,0CAA0CpG,UAAWC,IAAOmJ,SAMvH,uBAAGpJ,UAAWC,IAAOgJ,aAArB,oBAEI3I,KAAKR,MAAMwI,QAAQ7D,SAEnB,2BAAOtB,KAAK,OAAOL,KAAK,WACtBoG,aAAc5I,KAAKR,MAAM0H,QAAQ/C,SACjC0E,UAAY7I,KAAKuI,cAGnB,8BACIvI,KAAKR,MAAM0H,QAAQ/C,SACrB,yBAAK9D,QAAUL,KAAKsI,UAAY9F,KAAK,WACnCsD,IAAI,0CAA0CpG,UAAWC,IAAOmJ,SAIxE,uBAAGpJ,UAAWC,IAAOgJ,aAArB,UAA2C3I,KAAKR,MAAM0H,QAAQjG,MAA9D,KACA,uBAAGvB,UAAWC,IAAOgJ,aAEjB3I,KAAKR,MAAMwI,QAAQ3D,OAEnB,2BAAOxB,KAAK,OAAOL,KAAK,SACtBoG,aAAc5I,KAAKR,MAAM0H,QAAQ7C,OACjCwE,UAAY7I,KAAKuI,cAGnB,8BACIvI,KAAKR,MAAM0H,QAAQ7C,OACrB,yBAAKhE,QAAUL,KAAKsI,UAAY9F,KAAK,SACnCsD,IAAI,0CAA0CpG,UAAWC,IAAOmJ,SAIxE,uBAAGpJ,UAAWC,IAAOgJ,aAEjB3I,KAAKR,MAAMwI,QAAQxI,MAEnB,2BAAOqD,KAAK,OAAOL,KAAK,QACtBoG,aAAc5I,KAAKR,MAAM0H,QAAQ1H,MACjCqJ,UAAY7I,KAAKuI,cAGnB,8BACIvI,KAAKR,MAAM0H,QAAQ1H,MACrB,yBAAKa,QAAUL,KAAKsI,UAAY9F,KAAK,QACnCsD,IAAI,0CAA0CpG,UAAWC,IAAOmJ,SAIxE,uBAAGpJ,UAAWC,IAAOgJ,aAEjB3I,KAAKR,MAAMwI,QAAQzD,QAEnB,2BAAO1B,KAAK,OAAOL,KAAK,UACtBoG,aAAc5I,KAAKR,MAAM0H,QAAQ3C,QACjCsE,UAAY7I,KAAKuI,cAGnB,8BACIvI,KAAKR,MAAM0H,QAAQ3C,QACrB,yBAAKlE,QAAUL,KAAKsI,UAAY9F,KAAK,UACnCsD,IAAI,0CAA0CpG,UAAWC,IAAOmJ,SAIxE,uBAAGpJ,UAAWC,IAAOgJ,aAArB,iBAAkD3I,KAAKR,MAAM0H,QAAQzC,UAArE,KACA,6BACA,6BACA,mC,GAhMUlE,a,iBC6EPwI,E,2MAzEbvJ,MAAQ,CACNuH,KAAM,GACNL,KAAM,EACNhF,OAAQ,I,EAwBVsH,kBAAoB,WAClBjI,IAAMkI,OAAN,8DAAoE,EAAKhJ,MAAMwH,MAAMC,OAAOlC,KAC3FtE,MAAK,SAAAuH,GACJ,EAAKxI,MAAM8B,QAAQC,KAAK,S,mFAxBP,IAAD,OAElBhC,KAAKmC,SAAS,CACZT,OAAQwH,IAAU5H,aAAaM,QAAQ,UAKzCb,IAAMqG,IAAN,8DAAiEpH,KAAKC,MAAMwH,MAAMC,OAAOlC,KACxFtE,MAAK,SAAAC,GACJ,EAAKgB,SAAL,eACK,EAAK3C,MADV,CAEEkH,IAAKvF,EAAIK,QAEXJ,QAAQC,IAAI,EAAK7B,UAElByC,OAAM,SAAAC,GACLd,QAAQC,IAAIa,Q,+BAcd,OACE,yBAAKxC,UAAWC,IAAO+C,WAEnB,4BAAK1C,KAAKR,MAAMkH,IAAIK,MACpB,2BAAG,4CAA2B/G,KAAKR,MAAMkH,IAAIG,cAAkB,6BAC/D,2BAAG,yCAAH,IAA4B7G,KAAKR,MAAOkH,IAAIK,MAAU,6BACtD,2BAAG,6CAAH,IAAgC/G,KAAKR,MAAMkH,IAAII,UAAc,6BAC7D,2BAAG,2CAAH,KAA8B9G,KAAKR,MAAMkH,IAAIkB,QAAW,6BACxD,2BAAG,oDACF5H,KAAKR,MAAMkH,IAAImB,aAChB,6BAAK,6BAKH7H,KAAKR,MAAMkH,IAAIyC,UAAYnJ,KAAKR,MAAMkC,OAAO8D,GAE/C,yBAAK9F,UAAWC,IAAOmI,OAErB,6BACA,gCAAQ,kBAAC,IAAD,CAAM/H,GAAE,wBAAmBC,KAAKR,MAAMkH,IAAIlB,KAA1C,oBACR,6BACA,6BACA,4BAAQnF,QAASL,KAAKgJ,kBAAmBtJ,UAAU,UAAnD,4BAGF,Q,GAjEWa,a,iBCuEN6I,E,YApEX,WAAYnJ,GAAQ,IAAD,8BACjB,4CAAMA,KALRT,MAAQ,CACN6J,MAAO,KAKoB,IAAxB,EAAKpJ,MAAMmG,UACZ,EAAKnG,MAAM8B,QAAQC,KAAK,KAHT,E,iFAOE,IAAD,OAElBjB,IAAMC,KAAK,gEAAiE,CAC1EqF,MAAO/E,aAAaM,QAAQ,OAC5B4F,OAAQxH,KAAKC,MAAMwH,MAAMC,OAAOlC,KAEjCtE,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIK,MAChB,EAAKW,SAAS,CAAEkH,MAAOlI,EAAIK,UAE5BS,OAAM,SAAAC,GACLd,QAAQC,IAAIa,Q,+BAMd,OACE,6BACE,6BACA,wBAAIxC,UAAWC,IAAO2J,SAAtB,kBAEA,yBAAK5J,UAAWC,IAAOqH,YACS,IAA5BhH,KAAKR,MAAM6J,MAAME,OAEnB,2BAAO7J,UAAWC,IAAOqH,YACzB,+BACE,4BACE,oCACA,4CACA,uCAGJ,+BACA,gCAAK,4BAAI,0BAAMtH,UAAWC,IAAO6J,aAAxB,cAAT,KAEExJ,KAAKR,MAAM6J,MAAM5C,KAAI,SAACzC,EAAM2C,GAAP,OACvB,wBAAIA,IAAKA,GACT,wBAAIjH,UAAWC,IAAO8J,iBAAkBzF,EAAKxB,MAC7C,wBAAI9C,UAAWC,IAAO8J,iBAAkBzF,EAAKG,UAC7C,wBAAIzE,UAAWC,IAAO8J,iBAAkBzF,EAAK/C,aAM/C,2BAAOvB,UAAWC,IAAOqH,YACzB,+BACE,4BACE,0D,GA9DazG,a,iBCgEZmJ,E,2MA7DblK,MAAQ,CACNqH,aAAa,GACbE,KAAK,GACLD,SAAS,GACTc,OAAO,GACPC,YAAY,I,EAGd8B,cAAgB,SAACtH,GACbA,EAAMvB,iBAENC,IAAMC,KAAK,sDAAuD,CAE9DqF,MAAO/E,aAAaM,QAAQ,OAC5B8E,IAAK,CACHG,aAAc,EAAKrH,MAAMqH,aACzBE,KAAM,EAAKvH,MAAMuH,KACjBD,SAAU,EAAKtH,MAAMsH,SACrBc,OAAQ,EAAKpI,MAAMoI,OACnBC,YAAa,EAAKrI,MAAMqI,eAG7B3G,MAAK,SAAAuH,GACFrH,QAAQC,IAAIoH,GACZ,EAAKxI,MAAM8B,QAAQC,KAAK,gBAE3BC,OAAM,SAAAC,GACHd,QAAQC,IAAIa,O,EAKpBE,mBAAqB,SAACC,GAChBA,EAAMvB,iBACN,IAAMwB,EAAQD,EAAME,OAAOD,MAC3B,EAAKH,SAAL,eACO,EAAK3C,MADZ,eAEK6C,EAAME,OAAOC,KAAOF,M,wEAM7B,OACE,yBAAK5C,UAAWC,IAAO+C,WACrB,0BAAME,SAAU5C,KAAK2J,eACnB,2BAAO9G,KAAK,OAAOE,YAAY,uBAAuBP,KAAK,eAAeM,SAAU9C,KAAKoC,qBACvF,2BAAOS,KAAK,OAAOE,YAAY,UAAUP,KAAK,OAAOM,SAAU9C,KAAKoC,qBACpE,2BAAOS,KAAK,OAAOE,YAAY,cAAcP,KAAK,WAAWM,SAAU9C,KAAKoC,qBAC5E,2BAAOS,KAAK,OAAOE,YAAY,YAAYP,KAAK,SAASM,SAAU9C,KAAKoC,qBACxE,8BAAUS,KAAK,OAAOE,YAAY,iBAAgBP,KAAK,cAAaM,SAAU9C,KAAKoC,qBAEnF,4BAAQS,KAAK,UAAb,eAPJ,IAO+C,yBAAKnD,UAAWC,IAAOsD,QAAvB,W,GAtD/B1C,aCsFTqJ,E,2MA/DbpK,MAAQ,CACNC,UAAU,EACVoC,SAAU,I,EAUZgI,eAAiB,SAACzD,GAChB,EAAKjE,SAAS,CAAE1C,SAAU2G,K,EAG5B0D,cAAgB,WACd,EAAK3H,SAAS,CAAE1C,UAAU,IAC1B6B,aAAayI,WAAW,OACxBzI,aAAayI,WAAW,WAExBC,OAAOlD,SAASmD,QAAQ,mB,EAG1BC,QAAU,SAACrH,GACT,EAAKV,SAAS,CAACN,SAAUgB,K,mFAnBtBvB,aAAaM,QAAQ,QACtB5B,KAAKmC,SAAS,CAAE1C,UAAU,M,+BAqBpB,IAAD,OACP,OAEE,kBAAC,IAAD,KACE,yBAAKC,UAAU,OACX,kBAAC,IAAD,CAAOyK,KAAK,IAAIC,OAAQ,SAACnK,GAAD,OAAW,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBR,SAAU,EAAKD,MAAMC,SAAUa,SAAU,EAAKwJ,oBAGpG,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOK,KAAK,IAAIE,OAAK,EAACD,OAAS,SAACnK,GAAD,OAAW,kBAAC,EAAD,iBAAWA,EAAX,CAAkBR,SAAU,EAAKD,MAAMC,SAAWqC,QAAS,EAAK+H,qBAE1G,kBAAC,IAAD,CAAOM,KAAK,YAAYE,OAAK,EAACD,OAAQ,SAACnK,GAAD,OAAW,kBAAC,EAAD,eAAUmG,SAAU,EAAK5G,MAAMC,UAAcQ,OAE9F,kBAAC,IAAD,CAAOkK,KAAK,cAAcE,OAAK,EAACD,OAAS,SAACnK,GAAD,OAAW,kBAAC,EAAcA,MAEnE,kBAAC,IAAD,CAAOkK,KAAK,WAAWE,OAAK,EAACD,OAAQ,SAACnK,GAAD,OAAW,kBAAC,EAAQA,MAEzD,kBAAC,IAAD,CAAOkK,KAAK,oBAAoBE,OAAK,EAACC,UAAWlB,IAEjD,kBAAC,IAAD,CAAOe,KAAK,cAAcE,OAAK,EAACC,UAAWvB,IAE3C,kBAAC,IAAD,CAAOoB,KAAK,YAAYE,OAAK,EAACD,OAAS,SAACnK,GAAD,OAAW,kBAAC,EAAD,iBAAcA,EAAd,CAAqB6B,QAAS,EAAK+H,qBAErF,kBAAC,IAAD,CAAOM,KAAK,aAAaE,OAAK,EAACD,OAAQ,SAACnK,GAAD,OAAW,kBAAC,EAAYA,MAE/D,kBAAC,IAAD,CAAOkK,KAAK,YAAYE,OAAK,EAACD,OAAS,SAACnK,GAAD,OAAW,kBAAC,EAAaA,MAEhE,kBAAC,IAAD,CAAOkK,KAAK,WAAWE,OAAK,EAACC,UAAWvC,Y,GAzDpCxH,aCdEgK,QACW,cAA7BP,OAAOlD,SAAS0D,UAEe,UAA7BR,OAAOlD,SAAS0D,UAEhBR,OAAOlD,SAAS0D,SAAS/C,MACvB,2DCZNgD,IAASL,OAAO,kBAAC,EAAD,MAASM,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5J,MAAK,SAAA6J,GACjCA,EAAaC,kB","file":"static/js/main.cbb75929.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Register_error__3iNrZ\",\"normal\":\"Register_normal__NsiiA\",\"container\":\"Register_container__XWZSX\",\"registerform\":\"Register_registerform__3_6fP\",\"subtitle\":\"Register_subtitle__1fPGk\",\"employer\":\"Register_employer__3s608\",\"jobseeker\":\"Register_jobseeker__ZDtKg\",\"regForm\":\"Register_regForm__1dj3R\",\"button\":\"Register_button__1QxNe\",\"errorMsg\":\"Register_errorMsg__1BQ8z\",\"hidden\":\"Register_hidden__31VlX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"edit\":\"Profile_edit__1XuA8\",\"profileItem\":\"Profile_profileItem__3tf2l\",\"profileStyle\":\"Profile_profileStyle__165-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Lobbyemp_container__38x5n\",\"mainheader\":\"Lobbyemp_mainheader__jcTZ_\",\"jobboard\":\"Lobbyemp_jobboard__2Eoik\",\"jobcolumn\":\"Lobbyemp_jobcolumn__3kQZ-\",\"job\":\"Lobbyemp_job__2xuOf\",\"button\":\"Lobbyemp_button__LlJQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Jobboard_container__3fMoF\",\"mainheader\":\"Jobboard_mainheader__UH6bs\",\"jobboard\":\"Jobboard_jobboard__38Cl-\",\"jobcolumn\":\"Jobboard_jobcolumn__3I2O4\",\"job\":\"Jobboard_job__2KBXq\",\"btnwrap\":\"Jobboard_btnwrap__3yPuT\",\"button\":\"Jobboard_button__1sZnx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"applicants\":\"Applications_applicants__GYvSP\",\"heading\":\"Applications_heading__2-YQ3\",\"displaynone\":\"Applications_displaynone__-RocP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainnav\":\"Navbar_mainnav__x2RPw\",\"brand\":\"Navbar_brand__3RPLy\",\"inline\":\"Navbar_inline__1C7gR\",\"oddOneOut\":\"Navbar_oddOneOut__2jqd_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1Oz4Y\",\"invalidLogin\":\"Login_invalidLogin__3A8k2\",\"loginform\":\"Login_loginform__pbWFT\",\"loginregisterbutton\":\"Login_loginregisterbutton__2gCwq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Job_container__3KANX\",\"apply\":\"Job_apply__XIGY-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Empjob_container__3cKp0\",\"apply\":\"Empjob_apply__3Xv5d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreateJob_container__3E3iH\",\"botton\":\"CreateJob_botton__3usY0\"};","import React, { Component } from 'react';\nimport styles from './Navbar.module.css';\nimport {  Link } from 'react-router-dom';\nclass Navbar extends Component {\n    state = {\n        loggedin: false\n    }\n    render() {\n        return(\n            <div className={styles.navwrapper}>\n                <nav className={styles.mainnav}>\n                    <p className={styles.brand}>&lt;Jnr/Hub&gt;</p>\n                    <ul>\n                        <li><Link to=\"/\">Home</Link></li>\n                        {/* // If user is logged in */}\n                        { this.props.loggedin\n                        ?\n                        <div className={styles.inline}>\n                            <li><Link to=\"/jobboard\">Job Board</Link></li>\n                            <li><Link to=\"/profile\">Profile</Link></li>\n                          {/* // Else */}\n\n\n                            <li><a href=\"#\" className={styles.oddOneOut} to=\"/logout\" onClick={() => this.props.onLogout()}>Logout</a></li>\n                        </div>\n                        :\n                        <li> <Link to=\"/register\">Register</Link></li>\n                        }\n                    </ul>\n                </nav>\n            </div>\n        )\n    }\n}\nexport default Navbar;\n","import React, { Component } from 'react';\n// import {withRouter} from 'react-router-dom';\nimport styles from \"./Login.module.css\";\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\nclass Login extends Component {\n\n    state = {\n        // Stores login state in variables\n        username: '',\n        password: '',\n        invalidLogin: false\n\n    }\n\n    constructor(props) {\n        super(props);\n        if(this.props.loggedin) {\n            console.log(this.props);\n            console.log(this.props.usrType);\n            this.props.history.push(\"/\" + localStorage.getItem(\"usrType\"));\n        }\n    }\n\n    loginHandler = (e) => {\n        e.preventDefault();\n\n        axios.post('https://whispering-chamber-55079.herokuapp.com/tokens', {\n            email: this.state.username,\n            password: this.state.password\n        })\n        .then(res => {\n            console.log(res);\n            localStorage.setItem(\"jwt\", res.data.jwt);\n            let result = jwtDecode(localStorage.getItem(\"jwt\"));\n            localStorage.setItem(\"usrType\", result.userType);\n            this.props.onLogin(true);\n\n            if(result.userType === \"jobseeker\") {\n                // redirect to jobseeker component\n                this.props.history.push(`/jobseeker`);\n\n            } else if(result.userType === \"employer\") {\n                // redirect_to employer component\n                this.props.history.push(`/employer`);\n            }\n        })\n        .catch(err => {\n            //display error\n            this.setState({invalidLogin: true});\n        });\n    }\n\n    inputChangeHandler = (event) => {\n        event.preventDefault();\n        const value = event.target.value;\n        this.setState({\n            ...this.state,\n            [event.target.name]: value\n        });\n    }\n\n    render() {\n        return(\n            <div className={styles.container}>\n                <div className={styles.loginform}>\n                    <h2>Log In</h2><hr/><br/>\n                        {/* // Login form */}\n                        <form onSubmit={this.loginHandler}>\n                            <input type=\"text\" name=\"username\" onChange={this.inputChangeHandler} placeholder=\"Username..\"/>\n                            <input type=\"password\" name=\"password\" onChange={this.inputChangeHandler} placeholder=\"Password..\"/>\n                            <button className = {styles.loginregisterbutton}\n                            type=\"submit\">Login</button><br/>\n                            <button className={styles.button}><a href=\"/jnrhub-client/#/register\">Register</a></button>\n                        </form>\n                        {/* // If details are invalid: */}\n                        { this.state.invalidLogin\n                        ?\n                        <div className={styles.invalidLogin}>\n                            Invalid Login\n                        </div>\n                        :\n                        \"\"\n                        }\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport styles from  \"./Register.module.css\";\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\nclass Register extends Component {\n\n  // Holds all fields variables\n    state = {\n        submitted: false,\n        emailError: styles.errorMsg,\n        emailInvalid: \"\",\n        fullnameInvalid: \"\",\n        phoneInvalid: \"\",\n        suburbInvalid:\"\",\n        stateInvalid:\"\",\n        countryInvalid:\"\",\n        aboutInvalid: \"\",\n        passwordInvalid:\"\"\n\n    };\n\n    memberHandler = (e, userPath) => {\n\n        // Gets users from back end to send data to\n\n        axios.post('https://whispering-chamber-55079.herokuapp.com/users', {\n            user: {\n                email: this.state.email,\n                full_name: this.state.fullname,\n                phone_no: this.state.phone,\n                suburb: this.state.suburb,\n                state: this.state.state,\n                country: this.state.country,\n                website: this.state.website,\n                about: this.state.about,\n                user_type: userPath,\n                admin: false,\n                password: this.state.password,\n                password_confirmation: this.state.confirm_password\n            }\n        })\n        .then(res => {\n            // Gets user token\n            console.log(res.data.jwt);\n            localStorage.setItem(\"jwt\", res.data.jwt);\n\n            // update navbar\n            this.props.onLogin(true);\n\n            // grab user data\n            let result = jwtDecode(localStorage.getItem(\"jwt\"));\n            console.log(result);\n\n            // redirect\n            localStorage.setItem(\"usrType\", result.userType);\n            this.props.history.push(`/${localStorage.getItem(\"usrType\")}`);\n\n        })\n        .catch(err => {\n            // could not create user\n            console.log(err);\n        });\n    }\n\n    inputChangeHandler = (event) => {\n        event.preventDefault();\n        const value = event.target.value;\n        this.setState({\n            ...this.state,\n            [event.target.name]: value\n        });\n\n        let valid = true;\n        const result = this.validateLive(valid, event);\n        // save later to state\n        valid = result;\n    }\n\n    validateLive = (valid, e) => {\n        if(e.target.value === \"\") {\n            this.setState({[e.target.name + 'Invalid']: styles.error});\n            valid = false;\n        } else {\n            this.setState({[e.target.name + 'Invalid']: styles.normal});\n        }\n\n        return valid;\n    }\n\n    validate = (valid, e) => {\n        if(e.target.email.value === \"\") {\n            this.setState({emailInvalid: styles.error});\n            this.setState({emailError: styles.errorMsg});\n            valid = false;\n        } else {\n            this.setState({emailInvalid: styles.normal});\n            this.setState({emailError: styles.hidden});\n\n        }\n\n        if(e.target.fullname.value === \"\") {\n            this.setState({fullnameInvalid: styles.error});\n            this.setState({fullnameError: styles.errorMsg});\n            valid = false;\n        } else {\n            this.setState({fullnameInvalid: styles.normal});\n            this.setState({fullnameError: styles.hidden});\n\n\n        }\n\n        if(e.target.phone.value === \"\") {\n            this.setState({phoneInvalid: styles.error});\n            valid = false;\n        } else {\n            this.setState({phoneInvalid: styles.normal});\n        }\n\n        if(e.target.suburb.value === \"\") {\n            this.setState({suburbInvalid: styles.error});\n            valid = false;\n        } else {\n            this.setState({suburbInvalid: styles.normal});\n        }\n\n        if(e.target.state.value === \"\") {\n            this.setState({stateInvalid: styles.error});\n            valid = false;\n        } else {\n            this.setState({stateInvalid: styles.normal});\n        }\n\n        if(e.target.country.value === \"\") {\n            this.setState({ countryInvalid: styles.error });\n            valid = false;\n        } else {\n            this.setState({ countryInvalid: styles.normal });\n        }\n\n        if(e.target.about.value === \"\") {\n            this.setState({ aboutInvalid: styles.error });\n            valid = false;\n        } else {\n            this.setState({ aboutInvalid: styles.normal });\n        }\n\n        if(e.target.password.value === \"\" || e.target.password.value !== e.target.confirm_password.value){\n            this.setState({ passwordInvalid: styles.error });\n            valid = false;\n        } else {\n            this.setState({ passwordInvalid: styles.normal });\n        }\n\n        if(e.target.confirm_password.value === \"\" || e.target.password.value !== e.target.confirm_password.value){\n            this.setState({ confirmPasswordInvalid: styles.error });\n            valid = false;\n        } else {\n            this.setState({ confirmPasswordInvalid: styles.normal });\n        }\n\n        return valid;\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n\n        let valid = true;\n\n        const result = this.validate(valid, e);\n\n        valid = result;\n\n        if(valid) {\n            this.setState({submitted: true});\n        }\n    }\n\n    render() {\n        return(\n            <div className={styles.container}>\n                { this.state.submitted === false\n                ?\n                <div className={styles.registerform}>\n                <div className={styles.regForm}>\n                    <h2>Register Now</h2><hr/><br/>\n                    <form onSubmit={this.handleSubmit}>\n                        <input onChange={this.inputChangeHandler} type=\"email\" placeholder=\"Your Email\" name=\"email\" id=\"email\" className={this.state.emailInvalid} />\n                        { this.state.emailInvalid.startsWith(\"Register_error\")\n                        ?\n                        <label className={this.state.emailError}>Please enter your email</label>\n                        :\n                        \"\"\n                        }\n                        <input onChange={this.inputChangeHandler} type=\"text\" placeholder=\"Your Full Name\" name=\"fullname\" id=\"fullname\" className={this.state.fullnameInvalid} />\n                        { this.state.fullnameInvalid.startsWith(\"Register_error\")\n                        ?\n                        <label className={styles.errorMsg}>Please enter your name</label>\n                        :\n                        \"\"\n                        }\n                        <input onChange={this.inputChangeHandler} type=\"text\" placeholder=\"Phone Number\" name=\"phone\" id=\"phone\" className={this.state.phoneInvalid} />\n                        { this.state.phoneInvalid.startsWith(\"Register_error\")\n                        ?\n                        <label className={styles.errorMsg}>Please enter your number</label>\n                        :\n                        \"\"\n                        }\n\n                        <input onChange={this.inputChangeHandler} type=\"text\" placeholder=\"Suburb\"\n                          name=\"suburb\" id=\"suburb\" className={this.state.suburbInvalid} />\n                        { this.state.suburbInvalid.startsWith(\"Register_error\")\n                          ?\n                          <label className={styles.errorMsg}>Please enter your suburb</label>\n                          :\n                          \"\"\n                        }\n\n                        <input onChange={this.inputChangeHandler} type=\"text\" placeholder=\"State\"\n                          name=\"state\" id=\"state\" className={this.state.stateInvalid} />\n                        { this.state.stateInvalid.startsWith(\"Register_error\")\n                          ?\n                          <label className={styles.errorMsg}>Please enter your state</label>\n                          :\n                          \"\"\n                        }\n                        <input onChange={this.inputChangeHandler} type=\"text\" placeholder=\"Country\" name=\"country\" id=\"country\" className={this.state.countryInvalid} />\n                          { this.state.countryInvalid.startsWith(\"Register_error\")\n                          ?\n                          <label className={styles.errorMsg}>Please enter your Country</label>\n                          :\n                          \"\"\n                        }\n\n                        <input onChange={this.inputChangeHandler} type=\"text\" placeholder=\"Website URL (optional)\" name=\"website\" id=\"website\" />\n                        <textarea onChange={this.inputChangeHandler} cols=\"30\" rows=\"5\" placeholder=\"Please tell us about yourself...\" name=\"about\" id=\"about\" className={this.state.aboutInvalid}/>\n                        { this.state.aboutInvalid.startsWith(\"Register_error\")\n                          ?\n                          <label className={styles.errorMsg}>Please enter your about information!</label>\n                          :\n                          \"\"\n                        }\n                        <input onChange={this.inputChangeHandler} type=\"password\" placeholder=\"Your Password\" name=\"password\" id=\"password\" className={this.state.passwordInvalid} />\n                        { this.state.passwordInvalid.startsWith(\"Register_error\")\n                          ?\n                          <label className={styles.errorMsg}>Please enter a valid password</label>\n                          :\n                          \"\"\n                        }\n\n\n                        <input onChange={this.inputChangeHandler} type=\"password\" placeholder=\"Confirm Password\"\n                          name=\"confirm_password\" id=\"confirm_password\" className={this.state.confirmPasswordInvalid} />\n                        { this.state.password !== this.state.confirm_password && this.state.password && this.state.confirm_password\n                        ?\n                        <label className={styles.errorMsg}>Passwords must match!</label>\n                        :\n                        \"\"\n                        }\n\n                        <button type=\"submit\" className={styles.loginregisterbutton}>Create Account</button>\n                      </form>\n                    </div>\n                    </div>\n                    :\n                    <div>\n                      <h2 className={styles.subtitle}>Are you:</h2>\n\n                      <div className={styles.container}>\n                        <div className={styles.employer} onClick={(e) => this.memberHandler(e, \"employer\")}>\n                          <label>An Employer</label>\n                          <img src=\"/assets/img/boss.jpeg\" alt=\"Big Boss\"/>\n                        </div>\n                        <div className={styles.jobseeker} onClick={(e) => this.memberHandler(e, \"jobseeker\")}>\n                          <label>A Job Seeker</label>\n\n                          <img src=\"/assets/img/bludger.jpg\" alt=\"Bludging Job Seeker\"/>\n\n                        </div>\n                      </div>\n                    </div>\n                  }\n                </div>\n              );\n            }\n          }\n\nexport default withRouter(Register);\n","import React, { Component } from 'react';\nimport styles from './Lobbyemp.module.css';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass Lobbyemp extends Component {\n\n  state = {\n    jobs: []\n  }\n\n  constructor(props) {\n    super(props);\n    if(this.props.loggedIn === false) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  componentDidMount() {\n    // Gets jobs table\n    axios.post('https://whispering-chamber-55079.herokuapp.com/myjobs', {\n      token: localStorage.getItem(\"jwt\")\n    })\n    .then(res => {\n      console.log(res.data);\n      this.setState({ token: localStorage.getItem(\"jwt\"), jobs: res.data });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n\n    return(\n      <div className={styles.container}>\n        <div className={styles.mainheader}>\n        <h1>Jobs Posted</h1>\n        </div>\n        <table className={styles.jobboard}>\n          <thead>\n            <tr>\n              <th>Company</th>\n              <th>Location</th>\n              <th>Role</th>\n              <th>Applications</th>\n            </tr>\n          </thead>\n          <tbody>\n          {/* // Loops through all jobs, should be showing which jobs a particular */}\n          {/* // Employer has created, right now just taking the first 2 */}\n          { this.state.jobs.slice(0).map((job, key) => (\n            <tr key={job.id}>\n            <td className={styles.jobcolumn}>{job.company_name}</td>\n            <td className={styles.jobcolumn}>{job.location}</td>\n            { <td className={styles.jobcolumn}>{job.role}</td> }\n            { <td className={styles.jobcolumn}>{job.applicants}</td> }\n            {/* // Shows employer job show page */}\n            <td className={styles.jobcolumn}><Link to={`/empjob/${job.id}`}>Details</Link></td>\n            </tr>\n          ))}\n\n          </tbody>\n        </table>\n        { localStorage.getItem(\"usrType\") !== 'jobseeker'\n        ?\n\n\n           <button className={styles.button}><Link to=\"/job/create\">Create  Job</Link></button>\n\n        :\n        \"\"\n        }\n      </div>\n    )\n  }\n\n}\n\nexport default Lobbyemp;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n// import styles from '../Lobbyjs/Lobbyjs.module.css';\nimport jwtDecode from 'jwt-decode';\n\nclass Lobbyjs extends Component {\n\n    state = {\n        profile: {\n            jobs: [] // prevents map() undefined error on initial render\n        }\n    }\n\n    componentDidMount() {\n\n        // Gets user profile\n        axios.post('https://whispering-chamber-55079.herokuapp.com/users/profile', {\n            \"token\": localStorage.getItem(\"jwt\")\n        })\n        .then(res => {\n            this.setState({ profile: res.data });\n            console.log(res.data);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n\n    }\n\n    render() {\n        return(\n            <div>\n                {/* // Displays user name for welcome message */}\n                <h1>Welcome, {this.state.profile.full_name}</h1>\n            </div>\n        );\n    }\n\n\n}\n\nexport default Lobbyjs;\n","import React, { Component } from 'react';\nimport styles from './Jobboard.module.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Jobboard extends Component {\n\n  state = {\n    jobs: []\n  }\n\n  constructor(props) {\n    super(props);\n    if(this.props.loggedIn === false) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  componentDidMount() {\n    axios.get('https://whispering-chamber-55079.herokuapp.com/jobs')\n    .then(res => {\n      console.log(res.data);\n      this.setState({ jobs: res.data });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n\n    return(\n      <div className={styles.container}>\n        <div className={styles.mainheader}>\n        <h1>Available Jobs</h1>\n\n\n      </div>\n        <table className={styles.jobboard}>\n          <thead>\n            <tr>\n              <th>Company</th>\n              <th>Location</th>\n              <th>Role</th>\n\n            </tr>\n          </thead>\n          <tbody>\n          { this.state.jobs.map((job, key) => (\n            <tr key={job.id}>\n            <td className={styles.jobcolumn}>{job.company_name}</td>\n            <td className={styles.jobcolumn}>{job.location}</td>\n          { <td className={styles.jobcolumn}>{job.role}</td> }\n            { localStorage.getItem(\"usrType\") === \"jobseeker\"\n            ?\n            <td className={styles.jobcolumn}><Link to={`/job/${job.id}`}>Details</Link></td>\n            :\n            <td className={styles.jobcolumn}><Link to={`/empjob/${job.id}`}>Details</Link></td>\n            }\n\n          </tr>\n          ))}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n}\n\nexport default Jobboard;\n","import React, { Component } from 'react';\nimport styles from './Job.module.css';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\nclass Job extends Component {\n\n  state = {\n    profileId: -1,\n    job: ''\n  }\n\n  componentDidMount() {\n    if(this.props.match.params.id) {\n      // Get job whos ID matches that in params\n      axios.get(`https://whispering-chamber-55079.herokuapp.com/jobs/${this.props.match.params.id}`)\n      .then(res => {\n        console.log(res);\n        this.setState({ profileId: this.props.match.params.id, job: res.data });\n      })\n      .catch(err => console.log(err));\n    } else {\n      this.props.history.push('/jobboard');\n    }\n  }\n\n  applyForJob = () => {\n    axios.post('https://whispering-chamber-55079.herokuapp.com/applications', {\n      token: localStorage.getItem(\"jwt\"),\n      job_id: this.props.match.params.id\n    })\n    .then(res => {\n      console.log(res.data);\n      alert(`Application sent to ${this.state.job.company_name}`);\n      this.props.history.push('/');\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n\n    return(\n      <div className={styles.container}>\n        {/* // Loop to show job information */}\n          <h1>{this.state.job.role}</h1><br/>\n          <p><strong>Company:</strong><br/><br/>{this.state.job.company_name}</p><br/><hr/><br/>\n          <p><strong>Location:</strong><br/><br/> {this.state.job.location}</p><br/><hr/><br/>\n          <p><strong>Salary:</strong><br/><br/> ${this.state.job.salary}</p><br/><hr/><br/>\n          <p><strong>Job Description:</strong><br/><br/><br/>\n          {this.state.job.description}</p>\n          <br/><hr/><hr/><br/>\n          <div className={styles.apply}>\n          <a onClick={this.applyForJob}>Apply Now!</a>\n          </div>\n        </div>\n\n    )\n  }\n\n}\n\nexport default Job;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport styles from '../Profile/Profile.module.css';\n// import styles from './Profile.module.css'\n\nclass Profile extends Component {\n\n  state = {\n    // for keeping track of inline editing:\n    editing: {\n      full_name: false,\n      full_nameError: [],\n      phone_no: false,\n      phone_noError: [],\n      suburb: false,\n      suburb_error: [],\n      state: false,\n      state_error: [],\n      website: false,\n      website_error: []\n    },\n    profile: {\n      jobs: [] // prevent map() undefined error on initial render\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"token\");\n    console.log(localStorage.getItem(\"jwt\"));\n    axios.post('https://whispering-chamber-55079.herokuapp.com/users/profile', {\n        \"token\": localStorage.getItem(\"jwt\")\n    })\n    .then(res => {\n      console.log(res.data );\n      this.setState({ profile: res.data });\n\n    })\n    .catch(err => {\n      console.log(\"error\",err);\n    });\n\n\n  }\n\n  editField = (event) => {\n    console.log('editing!', event.target.name);\n    this.setState({ editing: { [event.target.name]: true} });\n  }\n\n\n    updateField = (event) => {\n      console.log(event.target.value);\n\n      // The name=\"xxxx\" field in the input is used here to determine\n      // everything about this update: the key name that gets sent to\n      // Rails, the keys we update with setState, etc\n      const fieldName = event.target.name;\n\n      if(event.key === \"Enter\"){\n\n        //send axios request with user\n        const token = localStorage.getItem(\"jwt\");\n\n        axios.post(\"https://whispering-chamber-55079.herokuapp.com/users/update\",{\n            user: {\n              [fieldName]: event.target.value\n            },\n            token: token\n        })\n        .then(response => {\n\n          console.log(response.data);\n\n          if( response.data.error ){\n            // There was an error, so don't update the profile state\n            this.setState({\n              editing: {\n                ...this.state.editing, // don't lose other editing keys\n                [fieldName]: false,\n                [fieldName + 'Error']: response.data.error\n              }\n            });\n          } else {\n            // Success!\n            this.setState({\n              profile: {\n                ...this.state.profile, // don't erase what's already in the profile\n                [fieldName]: response.data.user[fieldName]\n              },\n              editing: { [fieldName]: false }  // No longer editing name, don't show edit field\n            });\n          } // else\n\n        })\n        .catch(err => {\n          console.log(\"error\",err);\n        });\n\n        console.log('SUBMIT!', this.state.profile.id);\n\n      } // if enter pressed\n    }\n\n    render() {\n        return(\n          <div>\n\n            <h1>Profile</h1>\n\n            <div className={styles.profileStyle}>\n\n\n            <p className={styles.profileItem}>Full name:&nbsp;\n              {\n                this.state.editing.full_name\n                ?\n                <input type=\"text\" name=\"full_name\"\n                  defaultValue={this.state.profile.full_name}\n                  onKeyDown={ this.updateField }\n                />\n                :\n                <span>\n                  { this.state.profile.full_name }\n                  <img onClick={ this.editField } name=\"full_name\" src=\"/jnrhub-client/assets/img/edit-icon.png\" className={styles.edit} />\n                </span>\n              }\n            </p>\n\n\n            <p className={styles.profileItem}>Phone Number:&nbsp;\n              {\n                this.state.editing.phone_no\n                ?\n                <input type=\"text\" name=\"phone_no\"\n                  defaultValue={this.state.profile.phone_no}\n                  onKeyDown={ this.updateField }\n                  />\n                :\n                <span>\n                  { this.state.profile.phone_no }\n                  <img onClick={ this.editField } name=\"phone_no\"\n                    src=\"/jnrhub-client/assets/img/edit-icon.png\" className={styles.edit} />\n                </span>\n              }\n            </p>\n            <p className={styles.profileItem}>Email: { this.state.profile.email} </p>\n            <p className={styles.profileItem}>\n              {\n                this.state.editing.suburb\n                ?\n                <input type=\"text\" name=\"suburb\"\n                  defaultValue={this.state.profile.suburb}\n                  onKeyDown={ this.updateField }\n                />\n                :\n                <span>\n                  { this.state.profile.suburb }\n                  <img onClick={ this.editField } name=\"suburb\"\n                    src=\"/jnrhub-client/assets/img/edit-icon.png\" className={styles.edit} />\n                </span>\n              }\n            </p>\n            <p className={styles.profileItem}>\n              {\n                this.state.editing.state\n                ?\n                <input type=\"text\" name=\"state\"\n                  defaultValue={this.state.profile.state}\n                  onKeyDown={ this.updateField }\n                />\n                :\n                <span>\n                  { this.state.profile.state }\n                  <img onClick={ this.editField } name=\"state\"\n                    src=\"/jnrhub-client/assets/img/edit-icon.png\" className={styles.edit} />\n                </span>\n              }\n            </p>\n            <p className={styles.profileItem}>\n              {\n                this.state.editing.website\n                ?\n                <input type=\"text\" name=\"website\"\n                  defaultValue={this.state.profile.website}\n                  onKeyDown={ this.updateField }\n                />\n                :\n                <span>\n                  { this.state.profile.website }\n                  <img onClick={ this.editField } name=\"website\"\n                    src=\"/jnrhub-client/assets/img/edit-icon.png\" className={styles.edit} />\n                </span>\n              }\n            </p>\n            <p className={styles.profileItem}>Account Type: { this.state.profile.user_type} </p>\n            <br/>\n            <br/>\n            <br/>\n          </div>\n      </div>\n        );\n    }\n\n\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport styles from './Empjob.module.css';\nimport axios from 'axios'\nimport JwtDecode from 'jwt-decode';\nimport { Link } from 'react-router-dom';\n\n\nclass Empjob extends Component {\n\n  state = {\n    role: '',\n    job: -1,\n    result: ''\n  }\n\n  componentDidMount() {\n\n    this.setState({\n      result: JwtDecode(localStorage.getItem(\"jwt\"))\n    });\n\n\n    // Get job whos ID matches that in params\n    axios.get(`https://whispering-chamber-55079.herokuapp.com/jobs/${this.props.match.params.id}`)\n    .then(res => {\n      this.setState({\n        ...this.state,\n        job: res.data\n      });\n      console.log(this.state);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  deletePostHandler = () => {\n    axios.delete(`https://whispering-chamber-55079.herokuapp.com/jobs/${this.props.match.params.id}`)\n    .then(response => {\n      this.props.history.push('/');\n    });\n  }\n\n\n  render() {\n\n    return(\n      <div className={styles.container}>\n          {/* // Loop to show information about a particular job */}\n          <h1>{this.state.job.role}</h1>\n          <p><strong>Company:</strong>{ this.state.job.company_name }</p><hr/>\n          <p><strong>Role:</strong> { this.state. job.role }</p><hr/>\n          <p><strong>Location:</strong> { this.state.job.location }</p><hr/>\n          <p><strong>Salary:</strong> ${this.state.job.salary}</p><hr/>\n          <p><strong>Job Description:</strong>\n          {this.state.job.description}</p>\n          <hr/><hr/>\n          {/* // Current Applicant counter, starting at 0, supposed to be incrementing when users apply */}\n\n\n          {/* // Destroy job path when an Employer marks a position as filled - only if the employer created the job */}\n          { this.state.job.user_id === this.state.result.id\n          ?\n          <div className={styles.apply}>\n              {/* NEEDS TO BE LINKED TO THE APPLICANTS OF THE PARAM JOB ID */}\n            <br/>\n            <button><Link to={`/applications/${this.state.job.id}`}>View Applicants</Link></button>\n            <br/>\n            <br/>\n            <button onClick={this.deletePostHandler} className=\"Delete\">Mark Position as Filled</button>\n          </div>\n          :\n          \"\"\n          }\n\n        </div>\n\n    )\n  }\n\n}\n\nexport default Empjob;\n","import React, { Component } from 'react';\nimport styles from './Applications.module.css';\nimport axios from 'axios';\n\nclass Applications extends Component {\n\n    state = {\n      users: []\n    }\n\n    constructor(props) {\n      super(props);\n      if(this.props.loggedIn === false) {\n        this.props.history.push(\"/\");\n      }\n    }\n\n    componentDidMount() {\n      // Get users from back end\n      axios.post('https://whispering-chamber-55079.herokuapp.com/job-applicants', {\n        token: localStorage.getItem(\"jwt\"),\n        job_id: this.props.match.params.id\n      })\n      .then(res => {\n        console.log(res.data);\n        this.setState({ users: res.data });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    }\n\n    render() {\n\n      return(\n        <div>\n          <div>\n          <h1 className={styles.heading}>Users Applied</h1>\n          </div>\n          <div className={styles.applicants}>\n            { this.state.users.length !== 0\n            ?\n            <table className={styles.applicants}>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Phone Number</th>\n                <th>Email</th>\n              </tr>\n            </thead>\n            <tbody>\n            <tr> <td><span className={styles.displaynone}>invisible</span></td> </tr>\n            {/* Loop to display list of applicants (at the moment every user) */}\n            { this.state.users.map((user, key) => (\n            <tr key={key}>\n            <td className={styles.applicantcolumn}>{user.name}</td>\n            <td className={styles.applicantcolumn}>{user.phone_no}</td>\n            <td className={styles.applicantcolumn}>{user.email}</td>\n            </tr>\n          ))}\n          </tbody>\n          </table>\n          :\n          <table className={styles.applicants}>\n          <tbody>\n            <tr>\n              <td>No Applicants Yet</td>\n            </tr>\n          </tbody>\n          </table>\n          }\n\n          </div>\n      </div>\n    )\n  }\n\n}\nexport default Applications;\n","import React, { Component } from 'react';\nimport styles from './CreateJob.module.css';\nimport axios from 'axios'\n\n\nclass CreateJob extends Component {\n\n  state = {\n    company_name:\"\",\n    role:\"\",\n    location:\"\",\n    salary:\"\",\n    description:\"\"\n  }\n\n  submitHandler = (event) => {\n      event.preventDefault();\n      // Pulls jobs table from the back end\n      axios.post('https://whispering-chamber-55079.herokuapp.com/jobs', {\n          // what data do you need to send?\n          token: localStorage.getItem(\"jwt\"),\n          job: {\n            company_name: this.state.company_name,\n            role: this.state.role,\n            location: this.state.location,\n            salary: this.state.salary,\n            description: this.state.description\n          }\n      })\n      .then(response => {\n          console.log(response);\n          this.props.history.push('/jobboard');\n      })\n      .catch(err => {\n          console.log(err);\n      })\n\n  }\n\n  inputChangeHandler = (event) => {\n        event.preventDefault();\n        const value = event.target.value;\n        this.setState({\n            ...this.state,\n            [event.target.name]: value\n        })\n    }\n\n\n  render() {\n    return(\n      <div className={styles.container}>\n        <form onSubmit={this.submitHandler}>\n          <input type=\"text\" placeholder=\"Your Company Name...\" name=\"company_name\" onChange={this.inputChangeHandler} />\n            <input type=\"text\" placeholder=\"Role...\" name=\"role\" onChange={this.inputChangeHandler} />\n            <input type=\"text\" placeholder=\"Location...\" name=\"location\" onChange={this.inputChangeHandler} />\n            <input type=\"text\" placeholder=\"Salary...\" name=\"salary\" onChange={this.inputChangeHandler} />\n            <textarea type=\"text\" placeholder=\"Description...\"name=\"description\"onChange={this.inputChangeHandler}></textarea>\n\n            <button type=\"submit\">Create Job </button> <div className={styles.button}> </div>\n        </form>\n\n      </div>\n\n    )\n  }\n}\n\nexport default CreateJob;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Lobbyemp from './components/Lobbyemp/Lobbyemp';\nimport Lobbyjs from './components/Lobbyjs/Lobbyjs';\nimport Jobboard from './components/Jobboard/Jobboard';\nimport Job from './components/Job/Job';\nimport Profile from './components/Profile/Profile';\nimport Empjob from './components/Empjob/Empjob';\nimport Applications from './components/Applications/Applications';\nimport CreateJob from './components/CreateJob/CreateJob';\n\n\n\n\n\n\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nclass App extends Component {\n\n  state = {\n    loggedin: false,\n    userType: ''\n  }\n\n  componentDidMount() {\n    if(localStorage.getItem(\"jwt\")) {\n      this.setState({ loggedin: true });\n    }\n  }\n\n\n  setLoginStatus = (loggedIn) => {\n    this.setState({ loggedin: loggedIn });\n  }\n\n  performLogout = () => {\n    this.setState({ loggedin: false });\n    localStorage.removeItem('jwt');\n    localStorage.removeItem('usrType');\n    // Redirection\n    window.location.replace(\"/jnrhub-client\");\n  }\n\n  setType = (type) => {\n    this.setState({userType: type});\n  }\n\n  render() {\n    return (\n      // Routing\n      <Router>\n        <div className=\"App\">\n            <Route path=\"/\" render={(props) => <Navbar {...props} loggedin={this.state.loggedin} onLogout={this.performLogout}  />} />\n\n\n            <Switch>\n              <Route path=\"/\" exact render={ (props) => <Login {...props} loggedin={this.state.loggedin}  onLogin={this.setLoginStatus} /> } />\n                {/* // Route to Job Board */}\n              <Route path=\"/jobboard\" exact render={(props) => <Jobboard loggedIn={this.state.loggedin} {...props} />} />\n                {/* // View Create Job Page */}\n              <Route path=\"/job/create\" exact render={ (props) => <CreateJob {...props} /> } />\n              {/* // Route to an individual Job, for Job seekers */}\n              <Route path=\"/job/:id\" exact render={(props) => <Job {...props} /> } />\n              {/* // Route to applicants, for employers */}\n              <Route path=\"/applications/:id\" exact component={Applications} />\n              {/* // Route to an individual job, for Employers */}\n              <Route path=\"/empjob/:id\" exact component={Empjob} />\n              {/* // Registration Page */}\n              <Route path=\"/register\" exact render={ (props) => <Register {...props} onLogin={this.setLoginStatus} /> } />\n              {/* // Job Seeker landing page */}\n              <Route path=\"/jobseeker\" exact render={(props) => <Lobbyjs {...props} /> } />\n              {/* // Employer landing page */}\n              <Route path=\"/employer\" exact render={ (props) => <Lobbyemp {...props} /> } />\n              {/* // View Profile page */}\n              <Route path=\"/profile\" exact component={Profile} />\n            </Switch>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}